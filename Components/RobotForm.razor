@using Application.Commands
@using FluentValidation

@inject IMediator mediator
@inject ISnackbar snackbar

<MudText Typo="Typo.h3" GutterBottom="true">Robot Form</MudText>

<MudPaper Class="pa-4">
    <MudForm @ref="form" Model="robotModel" Validation="robotValidator.ValidateValue">
        <MudTextField @bind-Value="robotModel.Code" For="() => robotModel.Code" Immediate="true" Label="Code" />
        <MudTextField @bind-Value="robotModel.Power" For="() => robotModel.Power" Immediate="true" Label="Power" />
    </MudForm>
    <MudCardActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="async () => await Submit()">
            Order</MudButton>
    </MudCardActions>
</MudPaper>



@code {

    Robot robotModel = new();
    MudForm form;
    RobotValidator robotValidator = new RobotValidator();

    private async Task Submit()
    {
        await form.Validate();

        if (form.IsValid)
        {
            await mediator.Send(new AddRobot.Command(robotModel.Code, robotModel.Power, new CyberBrain { }));
            snackbar.Add("Submited!");
        }
    }
}